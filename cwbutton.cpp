// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "cwbutton.h"

// Dispatch interfaces referenced by this interface
#include "FontDisp.h"
#include "cwpicturedisp.h"
#include "cwimage.h"
#include "PictureDisp.h"
#include "CWBindings.h"

/////////////////////////////////////////////////////////////////////////////
// CCWButton

IMPLEMENT_DYNCREATE(CCWButton, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CCWButton properties

BOOL CCWButton::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CCWButton::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

CFontDisp CCWButton::GetFont()
{
	LPDISPATCH pDispatch;
	GetProperty(DISPID_FONT, VT_DISPATCH, (void*)&pDispatch);
	return CFontDisp(pDispatch);
}

void CCWButton::SetFont(LPDISPATCH propVal)
{
	SetProperty(DISPID_FONT, VT_DISPATCH, propVal);
}

OLE_COLOR CCWButton::GetBackColor()
{
	OLE_COLOR result;
	GetProperty(DISPID_BACKCOLOR, VT_I4, (void*)&result);
	return result;
}

void CCWButton::SetBackColor(OLE_COLOR propVal)
{
	SetProperty(DISPID_BACKCOLOR, VT_I4, propVal);
}

long CCWButton::GetMode()
{
	long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CCWButton::SetMode(long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

CString CCWButton::GetCaption()
{
	CString result;
	GetProperty(DISPID_CAPTION, VT_BSTR, (void*)&result);
	return result;
}

void CCWButton::SetCaption(LPCTSTR propVal)
{
	SetProperty(DISPID_CAPTION, VT_BSTR, propVal);
}

BOOL CCWButton::GetValue()
{
	BOOL result;
	GetProperty(0x2, VT_BOOL, (void*)&result);
	return result;
}

void CCWButton::SetValue(BOOL propVal)
{
	SetProperty(0x2, VT_BOOL, propVal);
}

CString CCWButton::GetOnText()
{
	CString result;
	GetProperty(0x3, VT_BSTR, (void*)&result);
	return result;
}

void CCWButton::SetOnText(LPCTSTR propVal)
{
	SetProperty(0x3, VT_BSTR, propVal);
}

CString CCWButton::GetOffText()
{
	CString result;
	GetProperty(0x4, VT_BSTR, (void*)&result);
	return result;
}

void CCWButton::SetOffText(LPCTSTR propVal)
{
	SetProperty(0x4, VT_BSTR, propVal);
}

unsigned long CCWButton::GetOnColor()
{
	unsigned long result;
	GetProperty(0x5, VT_I4, (void*)&result);
	return result;
}

void CCWButton::SetOnColor(unsigned long propVal)
{
	SetProperty(0x5, VT_I4, propVal);
}

unsigned long CCWButton::GetOffColor()
{
	unsigned long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CCWButton::SetOffColor(unsigned long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

unsigned long CCWButton::GetOnTextColor()
{
	unsigned long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CCWButton::SetOnTextColor(unsigned long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

unsigned long CCWButton::GetOffTextColor()
{
	unsigned long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CCWButton::SetOffTextColor(unsigned long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

unsigned long CCWButton::GetCaptionColor()
{
	unsigned long result;
	GetProperty(0x9, VT_I4, (void*)&result);
	return result;
}

void CCWButton::SetCaptionColor(unsigned long propVal)
{
	SetProperty(0x9, VT_I4, propVal);
}

CCWPictureDisp CCWButton::GetOnImage()
{
	LPDISPATCH pDispatch;
	GetProperty(0xa, VT_DISPATCH, (void*)&pDispatch);
	return CCWPictureDisp(pDispatch);
}

void CCWButton::SetOnImage(LPDISPATCH propVal)
{
	SetProperty(0xa, VT_DISPATCH, propVal);
}

CCWPictureDisp CCWButton::GetOffImage()
{
	LPDISPATCH pDispatch;
	GetProperty(0xb, VT_DISPATCH, (void*)&pDispatch);
	return CCWPictureDisp(pDispatch);
}

void CCWButton::SetOffImage(LPDISPATCH propVal)
{
	SetProperty(0xb, VT_DISPATCH, propVal);
}

BOOL CCWButton::GetImmediateUpdates()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CCWButton::SetImmediateUpdates(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

long CCWButton::GetShowFocusMode()
{
	long result;
	GetProperty(0xd, VT_I4, (void*)&result);
	return result;
}

void CCWButton::SetShowFocusMode(long propVal)
{
	SetProperty(0xd, VT_I4, propVal);
}

CCWPictureDisp CCWButton::GetBackgroundImage()
{
	LPDISPATCH pDispatch;
	GetProperty(0xe, VT_DISPATCH, (void*)&pDispatch);
	return CCWPictureDisp(pDispatch);
}

void CCWButton::SetBackgroundImage(LPDISPATCH propVal)
{
	SetProperty(0xe, VT_DISPATCH, propVal);
}

BOOL CCWButton::GetWindowless()
{
	BOOL result;
	GetProperty(0x10, VT_BOOL, (void*)&result);
	return result;
}

void CCWButton::SetWindowless(BOOL propVal)
{
	SetProperty(0x10, VT_BOOL, propVal);
}

long CCWButton::GetReadyState()
{
	long result;
	GetProperty(DISPID_READYSTATE, VT_I4, (void*)&result);
	return result;
}

void CCWButton::SetReadyState(long propVal)
{
	SetProperty(DISPID_READYSTATE, VT_I4, propVal);
}

long CCWButton::GetKeyboardMode()
{
	long result;
	GetProperty(0x14, VT_I4, (void*)&result);
	return result;
}

void CCWButton::SetKeyboardMode(long propVal)
{
	SetProperty(0x14, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CCWButton operations

void CCWButton::SetBuiltinStyle(long Style)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Style);
}

void CCWButton::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CCWButton::ImportStyle(LPCTSTR FileName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x202, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 FileName);
}

void CCWButton::ExportStyle(LPCTSTR FileName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x201, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 FileName);
}

CCWImage CCWButton::OnImages(const VARIANT& Item)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_VARIANT;
	InvokeHelper(0x11, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		&Item);
	return CCWImage(pDispatch);
}

CCWImage CCWButton::OffImages(const VARIANT& Item)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_VARIANT;
	InvokeHelper(0x12, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		&Item);
	return CCWImage(pDispatch);
}

CPictureDisp CCWButton::ControlImage()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CPictureDisp(pDispatch);
}

void CCWButton::Refresh()
{
	InvokeHelper(DISPID_REFRESH, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CCWBindings CCWButton::GetCWBindings()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x115, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CCWBindings(pDispatch);
}

CPictureDisp CCWButton::ControlImageEx(long dpiX, long dpiY)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x15, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		dpiX, dpiY);
	return CPictureDisp(pDispatch);
}
