// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "cwcursor3d.h"

// Dispatch interfaces referenced by this interface
#include "CWPlot3D.h"
#include "fontdisp.h"


/////////////////////////////////////////////////////////////////////////////
// CCWCursor3D properties

BOOL CCWCursor3D::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CCWCursor3D::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

CString CCWCursor3D::GetName()
{
	CString result;
	GetProperty(0x1, VT_BSTR, (void*)&result);
	return result;
}

void CCWCursor3D::SetName(LPCTSTR propVal)
{
	SetProperty(0x1, VT_BSTR, propVal);
}

BOOL CCWCursor3D::GetVisible()
{
	BOOL result;
	GetProperty(0x2, VT_BOOL, (void*)&result);
	return result;
}

void CCWCursor3D::SetVisible(BOOL propVal)
{
	SetProperty(0x2, VT_BOOL, propVal);
}

double CCWCursor3D::GetXPosition()
{
	double result;
	GetProperty(0x3, VT_R8, (void*)&result);
	return result;
}

void CCWCursor3D::SetXPosition(double propVal)
{
	SetProperty(0x3, VT_R8, propVal);
}

double CCWCursor3D::GetYPosition()
{
	double result;
	GetProperty(0x4, VT_R8, (void*)&result);
	return result;
}

void CCWCursor3D::SetYPosition(double propVal)
{
	SetProperty(0x4, VT_R8, propVal);
}

double CCWCursor3D::GetZPosition()
{
	double result;
	GetProperty(0x5, VT_R8, (void*)&result);
	return result;
}

void CCWCursor3D::SetZPosition(double propVal)
{
	SetProperty(0x5, VT_R8, propVal);
}

CCWPlot3D CCWCursor3D::GetPlot()
{
	LPDISPATCH pDispatch;
	GetProperty(0x6, VT_DISPATCH, (void*)&pDispatch);
	return CCWPlot3D(pDispatch);
}

void CCWCursor3D::SetPlot(LPDISPATCH propVal)
{
	SetProperty(0x6, VT_DISPATCH, propVal);
}

long CCWCursor3D::GetRow()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CCWCursor3D::SetRow(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

long CCWCursor3D::GetColumn()
{
	long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CCWCursor3D::SetColumn(long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

BOOL CCWCursor3D::GetNameVisible()
{
	BOOL result;
	GetProperty(0x9, VT_BOOL, (void*)&result);
	return result;
}

void CCWCursor3D::SetNameVisible(BOOL propVal)
{
	SetProperty(0x9, VT_BOOL, propVal);
}

BOOL CCWCursor3D::GetPositionVisible()
{
	BOOL result;
	GetProperty(0xa, VT_BOOL, (void*)&result);
	return result;
}

void CCWCursor3D::SetPositionVisible(BOOL propVal)
{
	SetProperty(0xa, VT_BOOL, propVal);
}

BOOL CCWCursor3D::GetXYPlaneVisible()
{
	BOOL result;
	GetProperty(0xb, VT_BOOL, (void*)&result);
	return result;
}

void CCWCursor3D::SetXYPlaneVisible(BOOL propVal)
{
	SetProperty(0xb, VT_BOOL, propVal);
}

BOOL CCWCursor3D::GetXZPlaneVisible()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CCWCursor3D::SetXZPlaneVisible(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

BOOL CCWCursor3D::GetYZPlaneVisible()
{
	BOOL result;
	GetProperty(0xd, VT_BOOL, (void*)&result);
	return result;
}

void CCWCursor3D::SetYZPlaneVisible(BOOL propVal)
{
	SetProperty(0xd, VT_BOOL, propVal);
}

long CCWCursor3D::GetTextBackgroundTransparency()
{
	long result;
	GetProperty(0xe, VT_I4, (void*)&result);
	return result;
}

void CCWCursor3D::SetTextBackgroundTransparency(long propVal)
{
	SetProperty(0xe, VT_I4, propVal);
}

unsigned long CCWCursor3D::GetPointColor()
{
	unsigned long result;
	GetProperty(0xf, VT_I4, (void*)&result);
	return result;
}

void CCWCursor3D::SetPointColor(unsigned long propVal)
{
	SetProperty(0xf, VT_I4, propVal);
}

unsigned long CCWCursor3D::GetLineColor()
{
	unsigned long result;
	GetProperty(0x10, VT_I4, (void*)&result);
	return result;
}

void CCWCursor3D::SetLineColor(unsigned long propVal)
{
	SetProperty(0x10, VT_I4, propVal);
}

unsigned long CCWCursor3D::GetTextColor()
{
	unsigned long result;
	GetProperty(0x11, VT_I4, (void*)&result);
	return result;
}

void CCWCursor3D::SetTextColor(unsigned long propVal)
{
	SetProperty(0x11, VT_I4, propVal);
}

unsigned long CCWCursor3D::GetTextBackColor()
{
	unsigned long result;
	GetProperty(0x12, VT_I4, (void*)&result);
	return result;
}

void CCWCursor3D::SetTextBackColor(unsigned long propVal)
{
	SetProperty(0x12, VT_I4, propVal);
}

unsigned long CCWCursor3D::GetPlaneColor()
{
	unsigned long result;
	GetProperty(0x13, VT_I4, (void*)&result);
	return result;
}

void CCWCursor3D::SetPlaneColor(unsigned long propVal)
{
	SetProperty(0x13, VT_I4, propVal);
}

double CCWCursor3D::GetPointSize()
{
	double result;
	GetProperty(0x14, VT_R8, (void*)&result);
	return result;
}

void CCWCursor3D::SetPointSize(double propVal)
{
	SetProperty(0x14, VT_R8, propVal);
}

double CCWCursor3D::GetLineWidth()
{
	double result;
	GetProperty(0x15, VT_R8, (void*)&result);
	return result;
}

void CCWCursor3D::SetLineWidth(double propVal)
{
	SetProperty(0x15, VT_R8, propVal);
}

long CCWCursor3D::GetPlaneTransparency()
{
	long result;
	GetProperty(0x16, VT_I4, (void*)&result);
	return result;
}

void CCWCursor3D::SetPlaneTransparency(long propVal)
{
	SetProperty(0x16, VT_I4, propVal);
}

long CCWCursor3D::GetPointStyle()
{
	long result;
	GetProperty(0x17, VT_I4, (void*)&result);
	return result;
}

void CCWCursor3D::SetPointStyle(long propVal)
{
	SetProperty(0x17, VT_I4, propVal);
}

long CCWCursor3D::GetLineStyle()
{
	long result;
	GetProperty(0x18, VT_I4, (void*)&result);
	return result;
}

void CCWCursor3D::SetLineStyle(long propVal)
{
	SetProperty(0x18, VT_I4, propVal);
}

long CCWCursor3D::GetSnapMode()
{
	long result;
	GetProperty(0x19, VT_I4, (void*)&result);
	return result;
}

void CCWCursor3D::SetSnapMode(long propVal)
{
	SetProperty(0x19, VT_I4, propVal);
}

CFontDisp CCWCursor3D::GetFont()
{
	LPDISPATCH pDispatch;
	GetProperty(0x1a, VT_DISPATCH, (void*)&pDispatch);
	return CFontDisp(pDispatch);
}

void CCWCursor3D::SetFont(LPDISPATCH propVal)
{
	SetProperty(0x1a, VT_DISPATCH, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CCWCursor3D operations

void CCWCursor3D::SetPosition(double X, double Y, double Z)
{
	static BYTE parms[] =
		VTS_R8 VTS_R8 VTS_R8;
	InvokeHelper(0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 X, Y, Z);
}

void CCWCursor3D::SetColor(unsigned long Color)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Color);
}
