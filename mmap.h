#if !defined(AFX_MMAP_H__55000D2C_903A_4AB0_9093_B8DA2AA2AFDE__INCLUDED_)
#define AFX_MMAP_H__55000D2C_903A_4AB0_9093_B8DA2AA2AFDE__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CPictureDisp;
class CFontDisp;

/////////////////////////////////////////////////////////////////////////////
// CMMap wrapper class

class CMMap : public CWnd
{
protected:
	DECLARE_DYNCREATE(CMMap)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xd5f63c24, 0xb3d3, 0x11d0, { 0xb8, 0xf0, 0x0, 0x20, 0xaf, 0x34, 0x4e, 0xa } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	double GetMapNorth();
	void SetMapNorth(double);
	double GetMapSouth();
	void SetMapSouth(double);
	double GetMapEast();
	void SetMapEast(double);
	double GetMapWest();
	void SetMapWest(double);
	long GetMappingMode();
	void SetMappingMode(long);
	short GetMaps();
	void SetMaps(short);
	short GetMapID();
	void SetMapID(short);
	CString GetCaption();
	void SetCaption(LPCTSTR);
	unsigned long GetCaptionColor();
	void SetCaptionColor(unsigned long);
	short GetCaptionID();
	void SetCaptionID(short);
	short GetCaptionFontID();
	void SetCaptionFontID(short);
	short GetCaptions();
	void SetCaptions(short);
	double GetCaptionX();
	void SetCaptionX(double);
	double GetCaptionY();
	void SetCaptionY(double);
	CPictureDisp GetBackPicture();
	void SetBackPicture(LPDISPATCH);
	long GetBevelInner();
	void SetBevelInner(long);
	long GetBevelOuter();
	void SetBevelOuter(long);
	short GetBevelWidth();
	void SetBevelWidth(short);
	short GetBorderWidth();
	void SetBorderWidth(short);
	CString GetFontName();
	void SetFontName(LPCTSTR);
	float GetFontSize();
	void SetFontSize(float);
	short GetFontID();
	void SetFontID(short);
	CFontDisp GetFont();
	void SetFont(LPDISPATCH);
	short GetFonts();
	void SetFonts(short);
	BOOL GetFontBold();
	void SetFontBold(BOOL);
	BOOL GetFontItalic();
	void SetFontItalic(BOOL);
	BOOL GetFontStrikethru();
	void SetFontStrikethru(BOOL);
	BOOL GetFontUnderline();
	void SetFontUnderline(BOOL);
	BOOL GetAutoRedraw();
	void SetAutoRedraw(BOOL);
	CPictureDisp GetMapPicture();
	void SetMapPicture(LPDISPATCH);
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	double GetViewCenterX();
	void SetViewCenterX(double);
	double GetViewCenterY();
	void SetViewCenterY(double);
	double GetViewRadius();
	void SetViewRadius(double);
	short GetViews();
	void SetViews(short);
	short GetViewID();
	void SetViewID(short);
	short GetObjects();
	void SetObjects(short);
	short GetObjectID();
	void SetObjectID(short);
	long GetObjectSymbol();
	void SetObjectSymbol(long);
	unsigned long GetObjectColor();
	void SetObjectColor(unsigned long);
	double GetObjectOrientation();
	void SetObjectOrientation(double);
	CString GetObjectShape();
	void SetObjectShape(LPCTSTR);
	CString GetObjectCaption();
	void SetObjectCaption(LPCTSTR);
	double GetObjectScale();
	void SetObjectScale(double);
	short GetWaypoints();
	void SetWaypoints(short);
	long GetWaypointStyle();
	void SetWaypointStyle(long);
	short GetWaypointID();
	void SetWaypointID(short);
	CString GetWaypointCaption();
	void SetWaypointCaption(LPCTSTR);
	double GetWaypointOrientation();
	void SetWaypointOrientation(double);
	double GetWaypointScale();
	void SetWaypointScale(double);
	long GetWaypointSymbol();
	void SetWaypointSymbol(long);
	double GetWaypointX();
	void SetWaypointX(double);
	double GetWaypointY();
	void SetWaypointY(double);
	unsigned long GetWaypointColor();
	void SetWaypointColor(unsigned long);
	long GetObjectStyle();
	void SetObjectStyle(long);
	double GetObjectX();
	void SetObjectX(double);
	double GetObjectY();
	void SetObjectY(double);
	unsigned long GetWaypointLineColor();
	void SetWaypointLineColor(unsigned long);
	long GetWaypointLineStyle();
	void SetWaypointLineStyle(long);
	BOOL GetObjectBreadTrail();
	void SetObjectBreadTrail(BOOL);
	double GetObjectHeading();
	void SetObjectHeading(double);
	unsigned long GetObjectHeadingLineColor();
	void SetObjectHeadingLineColor(unsigned long);
	double GetObjectHeadingLineRange();
	void SetObjectHeadingLineRange(double);
	short GetObjectHeadingLineWidth();
	void SetObjectHeadingLineWidth(short);
	BOOL GetObjectHeadingShow();
	void SetObjectHeadingShow(BOOL);
	long GetObjectFOVStyle();
	void SetObjectFOVStyle(long);
	double GetObjectFOV();
	void SetObjectFOV(double);
	unsigned long GetObjectFOVLineColor();
	void SetObjectFOVLineColor(unsigned long);
	double GetObjectFOVLineRange();
	void SetObjectFOVLineRange(double);
	short GetObjectFOVLineWidth();
	void SetObjectFOVLineWidth(short);
	CPictureDisp GetObjectPicture();
	void SetObjectPicture(LPDISPATCH);
	long GetGridStyle();
	void SetGridStyle(long);
	double GetGridXDelta();
	void SetGridXDelta(double);
	double GetGridYDelta();
	void SetGridYDelta(double);
	unsigned long GetGridColor();
	void SetGridColor(unsigned long);
	short GetViewObjectID();
	void SetViewObjectID(short);
	short GetWaypointLineWidth();
	void SetWaypointLineWidth(short);
	short GetGridLineWidth();
	void SetGridLineWidth(short);
	long GetGridLineStyle();
	void SetGridLineStyle(long);
	double GetGridRefY();
	void SetGridRefY(double);
	double GetGridRefX();
	void SetGridRefX(double);
	double GetObjectZ();
	void SetObjectZ(double);
	double GetWaypointZ();
	void SetWaypointZ(double);
	CString GetWaypointShape();
	void SetWaypointShape(LPCTSTR);
	CPictureDisp GetWaypointPicture();
	void SetWaypointPicture(LPDISPATCH);
	BOOL GetZoomEnabled();
	void SetZoomEnabled(BOOL);
	BOOL GetPanEnabled();
	void SetPanEnabled(BOOL);
	long GetCaptionOrientation();
	void SetCaptionOrientation(long);
	BOOL GetOutline();
	void SetOutline(BOOL);
	CString GetOutlineTitle();
	void SetOutlineTitle(LPCTSTR);
	unsigned long GetOutlineColor();
	void SetOutlineColor(unsigned long);
	short GetOutlineWidth();
	void SetOutlineWidth(short);
	short GetOutlineAlign();
	void SetOutlineAlign(short);
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	BOOL GetSingleBuffer();
	void SetSingleBuffer(BOOL);
	BOOL GetFocusOutline();
	void SetFocusOutline(BOOL);
	CString GetConfiguration();
	void SetConfiguration(LPCTSTR);

// Operations
public:
	void Redraw();
	void RedrawStatic();
	void ShowPropertyPage();
	void SetWaypointData(const VARIANT& array);
	void SetPositionData(short ObjectID, double X, double Y, double Z);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_MMAP_H__55000D2C_903A_4AB0_9093_B8DA2AA2AFDE__INCLUDED_)
