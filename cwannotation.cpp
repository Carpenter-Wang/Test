// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "cwannotation.h"

// Dispatch interfaces referenced by this interface
#include "CWPlot.h"
#include "CWShape.h"


/////////////////////////////////////////////////////////////////////////////
// CCWAnnotation properties

BOOL CCWAnnotation::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CCWAnnotation::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

BOOL CCWAnnotation::GetVisible()
{
	BOOL result;
	GetProperty(0x1, VT_BOOL, (void*)&result);
	return result;
}

void CCWAnnotation::SetVisible(BOOL propVal)
{
	SetProperty(0x1, VT_BOOL, propVal);
}

long CCWAnnotation::GetCoordinateType()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CCWAnnotation::SetCoordinateType(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

CCWPlot CCWAnnotation::GetPlot()
{
	LPDISPATCH pDispatch;
	GetProperty(0x3, VT_DISPATCH, (void*)&pDispatch);
	return CCWPlot(pDispatch);
}

void CCWAnnotation::SetPlot(LPDISPATCH propVal)
{
	SetProperty(0x3, VT_DISPATCH, propVal);
}

long CCWAnnotation::GetPointIndex()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CCWAnnotation::SetPointIndex(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

long CCWAnnotation::GetSnapMode()
{
	long result;
	GetProperty(0x5, VT_I4, (void*)&result);
	return result;
}

void CCWAnnotation::SetSnapMode(long propVal)
{
	SetProperty(0x5, VT_I4, propVal);
}

LPDISPATCH CCWAnnotation::GetCaption()
{
	LPDISPATCH result;
	GetProperty(0x6, VT_DISPATCH, (void*)&result);
	return result;
}

void CCWAnnotation::SetCaption(LPDISPATCH propVal)
{
	SetProperty(0x6, VT_DISPATCH, propVal);
}

CCWShape CCWAnnotation::GetShape()
{
	LPDISPATCH pDispatch;
	GetProperty(0x7, VT_DISPATCH, (void*)&pDispatch);
	return CCWShape(pDispatch);
}

void CCWAnnotation::SetShape(LPDISPATCH propVal)
{
	SetProperty(0x7, VT_DISPATCH, propVal);
}

LPDISPATCH CCWAnnotation::GetArrow()
{
	LPDISPATCH result;
	GetProperty(0x8, VT_DISPATCH, (void*)&result);
	return result;
}

void CCWAnnotation::SetArrow(LPDISPATCH propVal)
{
	SetProperty(0x8, VT_DISPATCH, propVal);
}

CString CCWAnnotation::GetName()
{
	CString result;
	GetProperty(0x9, VT_BSTR, (void*)&result);
	return result;
}

void CCWAnnotation::SetName(LPCTSTR propVal)
{
	SetProperty(0x9, VT_BSTR, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CCWAnnotation operations

void CCWAnnotation::SetBuiltinStyle(long Style)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Style);
}
