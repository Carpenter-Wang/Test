// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "cwimage.h"

// Dispatch interfaces referenced by this interface
#include "picturedisp.h"


/////////////////////////////////////////////////////////////////////////////
// CCWImage properties

CString CCWImage::GetUrl()
{
	CString result;
	GetProperty(0x1, VT_BSTR, (void*)&result);
	return result;
}

void CCWImage::SetUrl(LPCTSTR propVal)
{
	SetProperty(0x1, VT_BSTR, propVal);
}

CPictureDisp CCWImage::GetPicture()
{
	LPDISPATCH pDispatch;
	GetProperty(0x2, VT_DISPATCH, (void*)&pDispatch);
	return CPictureDisp(pDispatch);
}

void CCWImage::SetPicture(LPDISPATCH propVal)
{
	SetProperty(0x2, VT_DISPATCH, propVal);
}

BOOL CCWImage::GetSaveLink()
{
	BOOL result;
	GetProperty(0x3, VT_BOOL, (void*)&result);
	return result;
}

void CCWImage::SetSaveLink(BOOL propVal)
{
	SetProperty(0x3, VT_BOOL, propVal);
}

BOOL CCWImage::GetStretch()
{
	BOOL result;
	GetProperty(0x4, VT_BOOL, (void*)&result);
	return result;
}

void CCWImage::SetStretch(BOOL propVal)
{
	SetProperty(0x4, VT_BOOL, propVal);
}

BOOL CCWImage::GetTile()
{
	BOOL result;
	GetProperty(0x5, VT_BOOL, (void*)&result);
	return result;
}

void CCWImage::SetTile(BOOL propVal)
{
	SetProperty(0x5, VT_BOOL, propVal);
}

BOOL CCWImage::GetTransparent()
{
	BOOL result;
	GetProperty(0x6, VT_BOOL, (void*)&result);
	return result;
}

void CCWImage::SetTransparent(BOOL propVal)
{
	SetProperty(0x6, VT_BOOL, propVal);
}

unsigned long CCWImage::GetTransparentColor()
{
	unsigned long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CCWImage::SetTransparentColor(unsigned long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

BOOL CCWImage::GetVisible()
{
	BOOL result;
	GetProperty(0x9, VT_BOOL, (void*)&result);
	return result;
}

void CCWImage::SetVisible(BOOL propVal)
{
	SetProperty(0x9, VT_BOOL, propVal);
}

long CCWImage::GetBlinkInterval()
{
	long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CCWImage::SetBlinkInterval(long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

long CCWImage::GetAnimateInterval()
{
	long result;
	GetProperty(0xb, VT_I4, (void*)&result);
	return result;
}

void CCWImage::SetAnimateInterval(long propVal)
{
	SetProperty(0xb, VT_I4, propVal);
}

BOOL CCWImage::GetReverseAnimation()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CCWImage::SetReverseAnimation(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

long CCWImage::GetAnimateRows()
{
	long result;
	GetProperty(0xd, VT_I4, (void*)&result);
	return result;
}

void CCWImage::SetAnimateRows(long propVal)
{
	SetProperty(0xd, VT_I4, propVal);
}

long CCWImage::GetAnimateColumns()
{
	long result;
	GetProperty(0xe, VT_I4, (void*)&result);
	return result;
}

void CCWImage::SetAnimateColumns(long propVal)
{
	SetProperty(0xe, VT_I4, propVal);
}

unsigned long CCWImage::GetColor()
{
	unsigned long result;
	GetProperty(0xf, VT_I4, (void*)&result);
	return result;
}

void CCWImage::SetColor(unsigned long propVal)
{
	SetProperty(0xf, VT_I4, propVal);
}

BOOL CCWImage::GetSubstitute()
{
	BOOL result;
	GetProperty(0x10, VT_BOOL, (void*)&result);
	return result;
}

void CCWImage::SetSubstitute(BOOL propVal)
{
	SetProperty(0x10, VT_BOOL, propVal);
}

BOOL CCWImage::GetFlipH()
{
	BOOL result;
	GetProperty(0x11, VT_BOOL, (void*)&result);
	return result;
}

void CCWImage::SetFlipH(BOOL propVal)
{
	SetProperty(0x11, VT_BOOL, propVal);
}

BOOL CCWImage::GetFlipV()
{
	BOOL result;
	GetProperty(0x12, VT_BOOL, (void*)&result);
	return result;
}

void CCWImage::SetFlipV(BOOL propVal)
{
	SetProperty(0x12, VT_BOOL, propVal);
}

long CCWImage::GetTolerance()
{
	long result;
	GetProperty(0x13, VT_I4, (void*)&result);
	return result;
}

void CCWImage::SetTolerance(long propVal)
{
	SetProperty(0x13, VT_I4, propVal);
}

unsigned long CCWImage::GetSubstituteColor()
{
	unsigned long result;
	GetProperty(0x14, VT_I4, (void*)&result);
	return result;
}

void CCWImage::SetSubstituteColor(unsigned long propVal)
{
	SetProperty(0x14, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CCWImage operations

void CCWImage::Reload()
{
	InvokeHelper(0x8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
