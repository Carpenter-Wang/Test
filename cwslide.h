// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CCWPointer;
class CFontDisp;
class CCWStatistics;
class CCWPictureDisp;
class CCWAxis;
class CCWPointers;
class CCWImage;
class CPictureDisp;
class CCWBindings;

/////////////////////////////////////////////////////////////////////////////
// CCWSlide wrapper class

class CCWSlide : public CWnd
{
protected:
	DECLARE_DYNCREATE(CCWSlide)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xd940e4c8, 0x6079, 0x11ce, { 0x88, 0xcb, 0x0, 0x20, 0xaf, 0x68, 0x45, 0xf6 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	CCWPointer GetActivePointer();
	void SetActivePointer(LPDISPATCH);
	CString GetCaption();
	void SetCaption(LPCTSTR);
	CFontDisp GetFont();
	void SetFont(LPDISPATCH);
	unsigned long GetCaptionColor();
	void SetCaptionColor(unsigned long);
	long GetReadyState();
	void SetReadyState(long);
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	CCWStatistics GetStatistics();
	void SetStatistics(LPDISPATCH);
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	long GetValuePairIndex();
	void SetValuePairIndex(long);
	VARIANT GetValue();
	void SetValue(const VARIANT&);
	OLE_COLOR GetForeColor();
	void SetForeColor(OLE_COLOR);
	BOOL GetImmediateUpdates();
	void SetImmediateUpdates(BOOL);
	long GetShowFocusMode();
	void SetShowFocusMode(long);
	CCWPictureDisp GetBackgroundImage();
	void SetBackgroundImage(LPDISPATCH);
	BOOL GetWindowless();
	void SetWindowless(BOOL);
	VARIANT GetIncDecValue();
	void SetIncDecValue(const VARIANT&);
	long GetKeyboardMode();
	void SetKeyboardMode(long);
	BOOL GetValuePairsOnly();
	void SetValuePairsOnly(BOOL);
	unsigned long GetInteriorColor();
	void SetInteriorColor(unsigned long);

// Operations
public:
	CCWAxis GetAxis();
	CCWPointers GetPointers();
	void AboutBox();
	void ImportStyle(LPCTSTR FileName);
	void ExportStyle(LPCTSTR FileName);
	CCWImage Images(const VARIANT& Item);
	CPictureDisp ControlImage();
	void Refresh();
	void SetBuiltinStyle(long Style);
	CCWBindings GetCWBindings();
	CPictureDisp ControlImageEx(long dpiX, long dpiY);
};
